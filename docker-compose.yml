version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - init_db
    networks:
      - app-network

  base:
    build:
      dockerfile: base.Dockerfile
    image: base
    env_file:
      - .env
    environment:
      - DB_HOST=postgres-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=boilerplate
    depends_on:
      - db
    networks:
      - app-network

  db:
    container_name: postgres-db
    image: postgres:16-alpine3.18
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=boilerplate
    env_file:
      - .env
    ports:
      - '5432:5432'
    networks:
      - app-network

  init_db:
    image: base
    command: sh -c "npm run db:reset"
    env_file:
      - .env
    environment:
      - DB_HOST=postgres-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=boilerplate
    depends_on:
      - db
      - base
    networks:
      - app-network